name: MLOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Training and Evaluating Model with DVC Configuration
  train_and_evaluate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Configure DVC with Supabase S3 credentials
    - name: Configure DVC
      env:
        SUPABASE_S3_ENDPOINT: ${{ secrets.SUPABASE_S3_ENDPOINT }}
        SUPABASE_S3_REGION: ${{ secrets.SUPABASE_S3_REGION }}
        SUPABASE_S3_ACCESS_KEY_ID: ${{ secrets.SUPABASE_S3_ACCESS_KEY_ID }}
        SUPABASE_S3_SECRET_ACCESS_KEY: ${{ secrets.SUPABASE_S3_SECRET_ACCESS_KEY }}
      run: |
        dvc remote add -d supabase-s3 s3://MLOps --force
        dvc remote modify supabase-s3 endpointurl $SUPABASE_S3_ENDPOINT
        dvc remote modify supabase-s3 region $SUPABASE_S3_REGION
        dvc remote modify supabase-s3 access_key_id $SUPABASE_S3_ACCESS_KEY_ID
        dvc remote modify supabase-s3 secret_access_key $SUPABASE_S3_SECRET_ACCESS_KEY

    # Pull data from DVC remote before training
    - name: Pull Data from DVC Remote
      run: |
        dvc pull

    # Run Training and Evaluation
    - name: Run Training and Evaluation
      working-directory: script
      run: |
        python train.py

    # Push new or updated data/model to DVC remote
    - name: Push to DVC Remote
      run: |
        dvc add dataset
        dvc add model
        dvc push

  # Step 2: Build and Push Docker Image
  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: train_and_evaluate

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mlops_project:latest .

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/mlops_project:latest
